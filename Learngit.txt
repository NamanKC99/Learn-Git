Git  -
It is a version control system.
Cloneable - We can push our data to Website and save it.

Properties of Git -



*) We can create branch .
Branch - By creating branch we can distribute outr code with our team
sub branch 1 = additiong program
sub branch 2 = Multiplication program

*)We can merge  branch too.
branch = sub branch 1 + sub branch 2

*) it is offline.
*) It saves your time.
*) can track your file or code changes.

-----------------CheatSheet of_Git_COMMAND_---------
git init
git add file_name
git commit -m "meseage for commit"
git checkout file_name
//You can go past file through checkout
git checkout <commit hashcode >

branch related command--
git branch//return branch name
git branch -m <new_branchname> //can change a branch name
git branch <branch_name> //can create a new branch
git checkout <branch_name>//can change branch
//create branch name and go to branch
git checkout -b <branch_name>



`````Some file realted command ```````

***********************Git push***************
Def - used to upload local repository content to a 
      remote repository. 

``````````Many command to push file`````````

$git push <option>

//push branch forcefully
$git <remote> <branch> -force

//git push -v will give description output.
$git push -v

//we can delete a remove branch using push origin -delet edited
$git push origin -delet edited

			*End*
*********************************************

*************Git fetch******** 
//git fetch command download content(object,commits,refs) from required remote repositary.
//git fetch download content from another directory.

git fetch<option>
//to fetch repo by it's Url
$git fetch<repository Url>
//to fetch specific branch
$git fetch <branch_Url> <branch_name>
//To fetch all branch
$git fetch -all

//add update of remote repo to local repo
$git fetch origin


			*End*
********************************************
Git merge

//combines multiple sequence of commits into a single branch.

*****************Git pull*****************
Git pull 
//Git pull is a combination of git fetch and get merge
//first git fetch take a reposatry and then git merge merges the 
//repostary to main branch.

Git pull Defination-
//If in Github account directory changes then it update the directory in branch.
//to update the branch .bcz gihub repo has updated.


	```many command to pull file changes````
$git pull 

//option will define to many other operation
$git pull<option>

$git pull <remote branch url>

//git pull origin master
//origin stand for repository location.
//Master considered as a main branch.
$git pull orgin master


//Check remote  repository location 
$git remote -v




-----------Command of git----------

Branch - Copy of the main file(java).
Checkout - 
Clone

//------By (git init) this command you can start creating branch-----
$ git init
Initialized the file and creates folder(.git).


git rm file_name // For removing the file.
git rm -f file_name //for removing file Forcefully

$ ls
//list all the file.

log- it will track commit
$git log

add command...
$git add mul.java(file name).

to add all files of the folder use git add -A

$git add -A

Change file(mul.java) and then write git checkout


//after commit one time if you change anything in file 
you can undo that change by using checkout
$git checkout file name
Output - It will undo all changes.




Check git version...
$git --version 

Link your email and name with git...

$ git config --global user.name "Naman"
$ git config --global user.email "coderp57@gmail.com"

know your name and Gmail has been linked...
$ git config --list





-------Command to Command for pushing our file in Git------




hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git commit -m "file created"
[master (root-commit) 7b1d061] file created
 1 file changed, 66 insertions(+)
 create mode 100644 Learngit.txt



hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git remote -v

//      -----add the origin ---


hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git remote add origin https://github.com/NamanKC99/Learn-Git.git

//------Now remote - v command will work----

hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git remote -v
origin  https://github.com/NamanKC99/Learn-Git.git (fetch)
origin  https://github.com/NamanKC99/Learn-Git.git (push)

hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git branch -M master

hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 816 bytes | 272.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/NamanKC99/Learn-Git.git
 * [new branch]      master -> master
branch 'master' set up to track 'origin/master'.



//After doing change for  the file you can 
// Easily repush the changed file in Github
hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git add Learngit.txt

// After change code in file commit must do
hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git commit -m "done the change "


[master a0b9227] done the change
 1 file changed, 2 insertions(+), 2 deletions(-)

//this time our branch is save so we can directoly use push

hp@DESKTOP-Q2PH6MN MINGW64 ~/Desktop/Gitjava/pro (master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 2 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 329 bytes | 109.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (1/1), completed with 1 local object.
To https://github.com/NamanKC99/Learn-Git.git
   7b1d061..a0b9227  master -> master



// ----------file has uploaded to GitHub
